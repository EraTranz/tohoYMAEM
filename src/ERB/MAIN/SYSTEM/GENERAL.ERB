;=============================================================================
;キャラ変数増加汎用処理
;=============================================================================
;-------------------------------------------------
;特別な注意が無い場合の共通事項
;-------------------------------------------------
;ARG　……キャラ位置
;ARG:1……どれが上昇するのかを指定
;ARG:2……上昇量
;ARG:3……表示形式(0=PRINTFORML, 1=PRINTFORMW, 2=表示しない)
;ARG:4……表示形式その２(0=調教対象も表示する, 1=調教対象の表示を省略する, 2=対象の表示を省略する)
;-------------------------------------------------
;宝珠上昇汎用処理
;-------------------------------------------------
@COMMON_UP_JUEL, ARG, ARG:1, ARG:2, ARG:3, ARG:4
;ぶぶ漬け
SIF ARG:2 <= 0
	RETURN 0

;単純に丸投げ
CALL COMMON_MOVE_JUEL, ARG, ARG:1, ARG:2, ARG:3, ARG:4
RETURN RESULT

;-------------------------------------------------
;宝珠下降汎用処理
;-------------------------------------------------
;ARG:2にはどれだけ下げるかを入れる（100個減らすなら100、-100ではない）
@COMMON_DOWN_JUEL, ARG, ARG:1, ARG:2, ARG:3, ARG:4
;ぶぶ漬け
SIF ARG:2 <= 0
	RETURN 0

;単純にARG:2の値を反転させて丸投げ
CALL COMMON_MOVE_JUEL, ARG, ARG:1, -ARG:2, ARG:3, ARG:4
RETURN RESULT

;-------------------------------------------------
;宝珠変動汎用処理
;-------------------------------------------------
@COMMON_MOVE_JUEL, ARG, ARG:1, ARG:2, ARG:3, ARG:4
;変動後の珠の数を計算
;-1p63-1は符号付き64ビットの2進数で表すことが出来る最大の数のはず
;違うかもしれない
LOCAL:1 = LIMIT(JUEL:ARG:(ARG:1) + ARG:2, 0, 9223372036854775806)
;変動差分を計算
LOCAL:2 = LOCAL:1-JUEL:ARG:(ARG:1)
;表示する文字列を計算
;ARG:4は0以下、１、2以上で分岐
;SIGN(LOCAL:2) == 1により差分の正負で＋と－を分岐
LOCALS = %PALAMNAME:(ARG:1)%の珠\@ ARG:4 - (ARG != TARGET) <= 0 ? (%CALLNAME:ARG%) # \@ \@ SIGN(LOCAL:2) == 1 ? ＋ # － \@ {ABS(LOCAL:2)}
;珠変動を反映
JUEL:ARG:(ARG:1) = LOCAL:1
;変動差分の絶対値が0でないなら表示
IF ABS(LOCAL:2) > 0
	SELECTCASE ARG:3
		;WAITを掛けない
		CASE 0
			PRINTSL LOCALS
			RETURN 1
		;WAITを掛ける
		CASE 1
			PRINTSW LOCALS
			RETURN 1
		;表示しない
		CASEELSE
			RETURN 0
	ENDSELECT
ENDIF

;-------------------------------------------------
;経験上昇汎用処理
;-------------------------------------------------
@COMMON_UP_EXP, ARG, ARG:1, ARG:2, ARG:3, ARG:4
;値が上昇しないなら戻る
SIF ARG:2 <= 0
	RETURN 0

EXP:ARG:(ARG:1) += ARG:2
IF ARG:4 == 1
	LOCALS = %EXPNAME:(ARG:1)%\@(ARG != TARGET) ? (%CALLNAME:ARG%) # \@ ＋ {ARG:2}
ELSEIF ARG:4 == 2
	LOCALS = %EXPNAME:(ARG:1)% ＋ {ARG:2}
ELSE
	LOCALS = %EXPNAME:(ARG:1)%(%CALLNAME:ARG%) ＋ {ARG:2}
ENDIF
IF ARG:2 > 0 && ARG:3 == 0
	PRINTFORML %LOCALS%
ELSEIF ARG:2 > 0 && ARG:3 == 1
	PRINTFORMW %LOCALS%
ENDIF
;Ｖ経験増加特別処理
IF ARG:1 == 0 && (CFLAG:ARG:11 & 1) == 0
	CFLAG:ARG:11 |= 1
;Ａ経験増加特別処理
ELSEIF ARG:1 == 1 && (CFLAG:ARG:11 & 2) == 0
	CFLAG:ARG:11 |= 2
;異常経験増加特別処理
ELSEIF ARG:1 == 50 && (CFLAG:ARG:11 & 4) == 0
	CFLAG:ARG:11 |= 4
ENDIF
SIF ARG:3 != 2
	RETURN 1

;-------------------------------------------------
;素質削除汎用処理
;-------------------------------------------------
;ARG　……キャラ位置
;ARG:1……TALENT番号
;ARG:2……表示処理用フラグ
@LOST_TALENTS, ARG, ARG:1, ARG:2
IF TALENT:ARG:(ARG:1)
	IF !TFLAG:989
		SIF ARG:2 == 0
			PRINTFORM %CALLNAME:ARG%は
		PRINTFORM [%TALENTNAME:(ARG:1)%]
	ENDIF
	TALENT:ARG:(ARG:1) = 0
	RETURN 1
ENDIF
RETURN ARG:2

;-------------------------------------------------
;素質追加汎用処理
;-------------------------------------------------
;ARG　……キャラ位置
;ARG:1……TALENT番号
;ARG:2……表示処理用フラグ
@GET_TALENTS, ARG, ARG:1, ARG:2
IF TALENT:ARG:(ARG:1) == 0
	IF !TFLAG:989
		SIF ARG:2 == 1
			PRINT を失い、
		PRINTFORM [%TALENTNAME:(ARG:1)%]
	ENDIF
	TALENT:ARG:(ARG:1) = 1
	RETURN 2
ENDIF
RETURN ARG:2

;--------------------------------------------------
;二者択一素質の変動汎用処理
;--------------------------------------------------
;ARGのTALENT1と2を1/2の確率で排他的選択するだけの処理
;ARG=対象キャラ
;ARG:1=TALENT1
;ARG:2=TALENT2
@TALENT_RAND_CHANGE_2, ARG, ARG:1, ARG:2
IF RAND:2 == 1
	TALENT:ARG:(ARG:1) = 1
	TALENT:ARG:(ARG:2) = 0
ELSE
	TALENT:ARG:(ARG:1) = 0
	TALENT:ARG:(ARG:2) = 1
ENDIF

;--------------------------------------------------
;三者択一素質の変動汎用処理
;--------------------------------------------------
;ARGのTALENT1と2とどっちも付かないを1/3の確率で排他的選択するだけの処理
;ARG=対象キャラ
;ARG:1=TALENT1
;ARG:2=TALENT2
@TALENT_RAND_CHANGE_3, ARG, ARG:1, ARG:2
IF RAND:3 == 0
	TALENT:ARG:(ARG:1) = 1
	TALENT:ARG:(ARG:2) = 0
ELSEIF RAND:2 == 0
	TALENT:ARG:(ARG:1) = 0
	TALENT:ARG:(ARG:2) = 1
ELSE
	TALENT:ARG:(ARG:1) = 0
	TALENT:ARG:(ARG:2) = 0
ENDIF

;-------------------------------------------------
;CFLAG増減汎用処理(好感度とか)
;-------------------------------------------------
@COMMON_MOVE_CFLAG, ARG, ARG:1, ARG:2, ARG:3, ARG:4
;変動差分を計算
LOCAL = MAX(CFLAG:ARG:(ARG:1)+ARG:2, 0)-CFLAG:ARG:(ARG:1)
;表示する文字列を計算
;ARG:4は0以下、１、2以上で分岐
;SIGN(LOCAL) == 1により差分の正負で＋と－を分岐
LOCALS = %CFLAGNAME:(ARG:1)%\@ ARG:4 - (ARG != TARGET) <= 0 ? (%CALLNAME:ARG%) # \@ \@ SIGN(LOCAL) == 1 ? ＋ # － \@ {ABS(LOCAL)}
;フラグ変動を反映
CFLAG:ARG:(ARG:1) += LOCAL
;変動差分が0でないなら表示
IF LOCAL != 0
	SELECTCASE ARG:3
		;WAITを掛けない
		CASE 0
			PRINTSL LOCALS
			RETURN 1
		;WAITを掛ける
		CASE 1
			PRINTSW LOCALS
			RETURN 1
		;表示しない
		CASEELSE
			RETURN 0
	ENDSELECT
ENDIF

;-------------------------------------------------
;BASE値増減汎用処理(増減表示無し)
;-------------------------------------------------
@ADD_BASE(ARG, ARG:1, ARG:2)
BASE:ARG:(ARG:1) = LIMIT(BASE:ARG:(ARG:1)+ARG:2, 0, MAXBASE:ARG:(ARG:1))



;-------------------------------------------------
;MARK値上昇汎用処理(ただし、MARK:苦痛刻印～MARK:同化刻印だけが対象)
;-------------------------------------------------
;ARG=対象キャラ
;ARG:1=対象刻印
;ARG:2=上昇後の対象刻印の値
;ARG:3=表示形式(0=PRINTFORML, 1=PRINTFORMW, 2=表示しない)
@COMMON_MARK_UP, ARG, ARG:1, ARG:2, ARG:3
;処理しないで戻す場合(存在しない刻印は上昇しない)
SIF ARG:1 < 0 || ARG:1 > 10
	RETURN 0
SIF STRLENS(MARKNAME:(ARG:1)) <= 0
	RETURN 0
;現在の刻印の数値が上昇後の値以上なら以降の処理をしない
SIF MARK:ARG:(ARG:1) >= ARG:2
	RETURN 0
;刻印上昇処理
IF ARG:1 == 8
	LOCAL = ARG:2 - MARK:ARG:96
ELSEIF ARG:1 == 9
	LOCAL = ARG:2 - MARK:ARG:97
ELSE
	LOCAL = ARG:2 - MARK:ARG:(ARG:1)
ENDIF
MARK:ARG:(ARG:1) = ARG:2
;恐怖刻印および反発刻印上昇時は刻印履歴も更新する
IF ARG:1 == 8
	MARK:ARG:96 = MAX(MARK:ARG:恐怖刻印 , ARG:2)
ELSEIF ARG:1 == 9
	MARK:ARG:97 = MAX(MARK:ARG:反発刻印 , ARG:2)
ENDIF
IF CFLAG:ARG:9 & 2 && GROUPMATCH(ARG:3, 0, 1)
	PRINTL 
	;苦痛刻印
	IF ARG:1 == 0
		IF ARG:2 == 1
			PRINTFORML %CALLNAME:ARG%は顔を歪ませながら苦痛を堪えている……
		ELSEIF ARG:2 == 2
			PRINTFORML %CALLNAME:ARG%はしばらくの間、苦鳴を漏らし続けていた……
		ELSEIF ARG:2 == 3
			PRINTFORML %CALLNAME:ARG%は余りの苦痛に泣き喚いていた……
		ENDIF
	;快楽刻印
	ELSEIF ARG:1 == 1
		IF ARG:2 == 1
			PRINTFORML %CALLNAME:ARG%は激しい快楽に身を打ち震わせていた……
		ELSEIF ARG:2 == 2
			PRINTFORML %CALLNAME:ARG%は快楽の余韻に顔を緩ませていた……
		ELSEIF ARG:2 == 3
			PRINTFORML %CALLNAME:ARG%は強烈な快楽に身も心も焦がしているようだ……
		ENDIF
	;屈服刻印
	ELSEIF ARG:1 == 2
		IF ARG:2 == 1
			IF TFLAG:999 == 1 && MARK_CALCULATE_2(1) == 1
				PRINTFORML %CALLNAME:ARG%は恥ずかしそうにしながら、こちらを見つめてきた……
			ELSEIF TFLAG:999 == 1 && MARK_CALCULATE_2(1) == 2
				PRINTFORML %CALLNAME:ARG%は思わず可愛らしい嬌声を上げたかと思うと、顔を赤くしてこちらから目を逸らした……
			ELSEIF TFLAG:999 == 1 && MARK_CALCULATE_2(1) == 3
				PRINTFORML %CALLNAME:ARG%は媚びるような視線を%CALLNAME:PLAYER%に投げかけた……
			ELSEIF TALENT:ARG:恋慕
				PRINTFORML %CALLNAME:ARG%は恥ずかしそうにしながら、こちらを見つめてきた……
			ELSEIF TALENT:ARG:淫乱 || TALENT:ARG:淫魔
				PRINTFORML %CALLNAME:ARG%は顔を赤くしてこちらから目を逸らした……
			ELSE
				PRINTFORML %CALLNAME:ARG%は屈辱に顔を歪めていた……
			ENDIF
		ELSEIF ARG:2 == 2
			IF TFLAG:999 == 1 && MARK_CALCULATE_2(2) == 1
				PRINTFORML %CALLNAME:ARG%は、こちらをじっと見つめ顔を赤くしていた……
			ELSEIF TFLAG:999 == 1 && MARK_CALCULATE_2(2) == 2
				PRINTFORML %CALLNAME:ARG%は快楽に震えながら、物欲しげな視線を送っていた……
			ELSEIF TFLAG:999 == 1 && MARK_CALCULATE_2(2) == 3
				PRINTFORML %CALLNAME:ARG%はもっと%CALLNAME:PLAYER%に喜んでもらいたいようだ……
			ELSEIF TALENT:ARG:恋慕
				PRINTFORML %CALLNAME:ARG%は、こちらをじっと見つめ顔を赤くしていた……
			ELSEIF TALENT:ARG:淫乱 || TALENT:ARG:淫魔
				PRINTFORML %CALLNAME:ARG%は物欲しげな視線を送っていた……
			ELSE
				PRINTFORML %CALLNAME:ARG%は明らかに反抗の意志が弱まっていた……
			ENDIF
		ELSEIF ARG:2 == 3
			IF TFLAG:999 == 1 && MARK_CALCULATE_2(3) == 1
				PRINTFORML %CALLNAME:ARG%は、うっとりとした様子で熱い視線をこちらに送っている……
			ELSEIF TFLAG:999 == 1 && MARK_CALCULATE_2(3) == 2
				PRINTFORML %CALLNAME:ARG%は快楽に乱れながらも、さらなる行為を懇願してきた……
			ELSEIF TFLAG:999 == 1 && MARK_CALCULATE_2(3) == 3
				PRINTFORML %CALLNAME:ARG%はどこか陶酔とした表情でじっと%CALLNAME:PLAYER%を見つめている……
			ELSEIF TALENT:ARG:恋慕
				PRINTFORML %CALLNAME:ARG%は、うっとりとした様子で熱い視線をこちらに送っている……
			ELSEIF TALENT:ARG:淫乱 || TALENT:ARG:淫魔
				PRINTFORML %CALLNAME:ARG%はさらなる行為を懇願してきた……
			ELSE
				PRINTFORML %CALLNAME:ARG%はどこか虚ろな瞳をこちらにおくっていた……
			ENDIF
		ENDIF
	;恥辱刻印
	ELSEIF ARG:1 == 4
		IF ARG:2 == 1
			PRINTFORML %CALLNAME:ARG%は辱めに顔を赤らめている……
		ELSEIF ARG:2 == 2
			PRINTFORML %CALLNAME:ARG%は辱めに翻弄されそうになっている……
		ELSEIF ARG:2 == 3
			PRINTFORML %CALLNAME:ARG%は辱めに完全に翻弄されてしまった……
		ENDIF
	;恐怖刻印
	ELSEIF ARG:1 == 8
		IF ARG:2 == 1
			IF TALENT:ARG:恋慕
				PRINTFORML %CALLNAME:ARG%は怯えた表情で、もう少し優しくしてとつぶやいた……
			ELSE
				PRINTFORML %CALLNAME:ARG%は怯えた表情で、小さな悲鳴をあげていた……
			ENDIF
		ELSEIF ARG:2 == 2
			IF TALENT:ARG:恋慕
				PRINTFORML %CALLNAME:ARG%は怯えた表情を見せながらも、%CALLNAME:PLAYER%から離れるつもりはないようだ……
			ELSE
				PRINTFORML %CALLNAME:ARG%は体を縮ませて、怯えの篭った視線を送っている……
			ENDIF
		ELSEIF ARG:2 == 3
			IF TALENT:ARG:恋慕
				PRINTFORML %CALLNAME:ARG%は怯え嫌がりながらも、%CALLNAME:PLAYER%から離れられないようだ……
			ELSE
				PRINTFORML %CALLNAME:ARG%は震えながら何度も何度も許しを請い続けていた……
			ENDIF
		ENDIF
	;反発刻印
	ELSEIF ARG:1 == 9
		IF TFLAG:999 == 1 && TALENT:ARG:恋慕
			;罵倒
			IF SELECTCOM == 227
				PRINTFORML 付き合ってるとはいえ、少し言い過ぎたようだ
			ELSE
				PRINTFORML 付き合っているとはいえ、少しやりすぎたようだ
			ENDIF
		ENDIF
		IF ARG:2 == 1
			PRINTFORML %CALLNAME:ARG%は鋭い視線をこちらに向けている……
		ELSEIF ARG:2 == 2
			PRINTFORML %CALLNAME:ARG%は怒りを滲ませた表情をしている……
		ELSEIF ARG:2 == 3
			PRINTFORML %CALLNAME:ARG%は憤怒に顔を歪ませて、恨み言を呟いている……
		ENDIF
	ENDIF
ENDIF
RESETCOLOR
SELECTCASE ARG:3
	;WAITを掛けない
	CASE 0
		PRINTFORM %CALLNAME:ARG%は、
		FONTBOLD
		PRINTFORM %MARKNAME:(ARG:1)%LV{MARK:ARG:(ARG:1)}
		FONTREGULAR
		PRINTL を取得した。
		SIF GROUPMATCH(ARG:1, 0, 1, 2, 3, 4, 8)
			CALL ACCEPTANCE_UP, ARG, 50 * LOCAL, 1
		SIF ARG:1 == 9
			CALL ACCEPTANCE_UP, ARG, -150 * LOCAL, 1
		SIF ARG:1 == 10
			CALL ACCEPTANCE_UP, ARG, 100 * LOCAL, 1
		RETURN 1
	;WAITを掛ける
	CASE 1
		PRINTFORM %CALLNAME:ARG%は、
		FONTBOLD
		PRINTFORM %MARKNAME:(ARG:1)%LV{MARK:ARG:(ARG:1)}
		FONTREGULAR
		PRINTW を取得した。
		SIF GROUPMATCH(ARG:1, 0, 1, 2, 3, 4, 8)
			CALL ACCEPTANCE_UP, ARG, 50 * LOCAL
		SIF ARG:1 == 9
			CALL ACCEPTANCE_UP, ARG, -150 * LOCAL
		SIF ARG:1 == 10
			CALL ACCEPTANCE_UP, ARG, 100 * LOCAL
		RETURN 1
	;表示しない
	CASEELSE
		RETURN 0
ENDSELECT

;=============================================================================
;各種汎用判定処理
;=============================================================================
;-------------------------------------------------
;身体のサイズによる可否
;-------------------------------------------------
;身体のサイズが同程度か、身体のサイズを無視出来る(=禁断の知識持ち)状態でない場合は0を返す
;ARG:0……調教者側キャラ位置
;ARG:1……調教対象側キャラ位置
@COMMON_BODYSIZE_CHECK(ARG:0, ARG:1)
#FUNCTION

;調教者側が[禁断の知識]を持たない場合、体格比較判定へ
IF TALENT:ARG:禁断の知識 == 0
	;互いの体格による体格差を求める
	LOCAL = COMMON_BODYSIZE_CHECK2(ARG:0, ARG:1)

	;調教者側と対象との体格差が二段階以上だとダメ
	SIF ABS(LOCAL) > 1
		RETURNF 0
ENDIF
RETURNF 1

;-------------------------------------------------
;身体のサイズによる可否その２
;-------------------------------------------------
;二人のキャラの身体サイズの差を数値として返す関数
;[禁断の知識]などの有無や判定そのものの可否は呼び出し元でやるようにする。
;ARG:0……調教者側キャラ位置
;ARG:1……調教対象側キャラ位置
@COMMON_BODYSIZE_CHECK2(ARG:0, ARG:1)
#FUNCTION

;調教対象側の[小人体型]
IF TALENT:(ARG:1):127
	LOCAL = -2
;調教対象側の[小柄体型]
ELSEIF TALENT:(ARG:1):128
	LOCAL = -1
;調教対象側の[巨躯]
ELSEIF TALENT:(ARG:1):129
	LOCAL = 1
;調教対象側の普通体型
ELSE
	LOCAL = 0
ENDIF
;調教者側の[小人体型]
IF TALENT:ARG:小人体型
	LOCAL -= -2
;調教者側の[小柄体型]
ELSEIF TALENT:ARG:小柄体型
	LOCAL -= -1
;調教者側の[巨躯]
ELSEIF TALENT:ARG:巨躯
	LOCAL -= 1
;調教者側の普通体型
ELSE
	LOCAL -= 0
ENDIF
RETURNF LOCAL

;-------------------------------------------------
;キャラIDのキャラを登録キャラから探す関数
;-------------------------------------------------
;いたらそのキャラの登録キャラ番号を返す、いなければ-1を返す
;ARG:0……探すべきキャラのID
;ARG:1……0 = 全員から探す, 1 = 主人は除く
@SEARCH_CHARA_ID(ARG:0, ARG:1)
#FUNCTION
LOCAL = -1
FOR LOCAL:1, 0, CHARANUM
	SIF ARG:1 == 1 && LOCAL:1 == MASTER
		CONTINUE

	IF CFLAG:(LOCAL:1):3109 == ARG:0
		LOCAL = LOCAL:1
		BREAK
	ENDIF
NEXT
RETURNF LOCAL

;-------------------------------------------------
;主人か助手可能キャラに禁断もしくは調合知識があるか探す関数
;-------------------------------------------------
;禁断の知識持ちがいればBit1を立てる、調合知識持ちがいればBit2を立てる。
@SEARCH_CHARA_WISDOM
#FUNCTION
LOCAL = 0
FOR LOCAL:1, 0, CHARANUM
	;その場にいないとだめ
	SIF CFLAG:(LOCAL:1):4
		CONTINUE
	;主人か助手可能でないとだめ
	SIF LOCAL:1 != MASTER && CFLAG:(LOCAL:1):1 < 2
		CONTINUE
	;[死亡]には通じない
	SIF TALENT:(LOCAL:1):800
		CONTINUE
	
	;調合知識持ち
	SIF TALENT:(LOCAL:1):55
		LOCAL |= 1
	;禁断の知識持ち
	SIF TALENT:(LOCAL:1):56
		LOCAL |= 2
NEXT
RETURNF LOCAL

;-----------------------------------------
;[使い魔]条件を満たしているかを調べる関数
;-----------------------------------------
;既に[使い魔]持ちor主人に関してはこれは使わないように。
;ARG:0……探すべきキャラの登録キャラ番号
@FAMILIAR_ABLE(ARG)
#FUNCTION
;壊造人格がない親愛または妄信が必要
IF TALENT:ARG:壊造人格 == 0
	SIF TALENT:ARG:妄信 == 0 && TALENT:ARG:親愛 == 0
		RETURNF 0
ENDIF
;従順、欲望の合計が8以上
SIF ABL:ARG:従順 + ABL:ARG:欲望 < 8
	RETURNF 0
;技巧、奉仕精神がそれぞれ4以上
SIF ABL:ARG:技巧 < 4 && ABL:ARG:奉仕精神 < 4
	RETURNF 0
;マゾっ気、自慰中毒がそれぞれ2以上
SIF ABL:ARG:マゾっ気 < 2 && ABL:ARG:自慰中毒 < 2
	RETURNF 0
;料理技能が3以上または歌唱技能が3以上または精液中毒が4以上
SIF ABL:ARG:料理技能 < 3 && ABL:ARG:歌唱技能 < 3 && ABL:ARG:精液中毒 < 4
	RETURNF 0
;強制自慰経験が50以上かつ奉仕快楽経験が500以上
SIF EXP:ARG:調教自慰経験 < 50 && EXP:ARG:奉仕快楽経験 < 500
	RETURNF 0
;屈服刻印Lv3かつ反発刻印Lv0
SIF MARK:ARG:屈服刻印 < 3 && MARK:ARG:反発刻印
	RETURNF 0
;好感度が500必要
SIF CFLAG:ARG:好感度 < 500
	RETURNF 0
;主人が[大甲斐性]を持っていない
    IF TALENT:MASTER:大甲斐性 == 0
	;男主人の場合
	    IF TALENT:MASTER:オトコ
		;相手が女ならレズ経験1500未満
		SIF EXP:ARG:レズ経験 >= 1500 && TALENT:ARG:オトコ == 0
			RETURNF 0
		;相手が男ならＢＬ経験1500以上
		    SIF EXP:ARG:ＢＬ経験 < 1500 && TALENT:ARG:オトコ
			    RETURNF 0
	;女主人の場合
	    ELSE
		;相手が女ならレズ経験が1500以上
		    SIF EXP:ARG:レズ経験 < 1500 && TALENT:ARG:オトコ == 0
			    RETURNF 0
		;相手が男ならＢＬ経験1500未満
		    SIF EXP:ARG:ＢＬ経験 >= 1500 && TALENT:ARG:オトコ
			    RETURNF 0
	    ENDIF
    ENDIF
RETURNF 1

;-------------------------------------------------
;キャラのMAXBASEに対するBASEの割合(百分率)算出
;-------------------------------------------------
;ARG:0……対象キャラの登録番号
;ARG:1……対象ゲージの番号
@CHECK_PERCENTAGE_BASE(ARG, ARG:1)
#FUNCTION
RETURNF (BASE:ARG:(ARG:1) <= 0 || MAXBASE:ARG:(ARG:1) <= 0) ? 0 # (BASE:ARG:(ARG:1) * 100 / MAXBASE:ARG:(ARG:1))

;=============================================================================
;キャラ追加時の共通処理
;=============================================================================
;ARGに追加したいキャラ番号を入力
@CHARA_STATE_BASIC, ARG
SIF !(TFLAG:213)
	ADDCHARA ARG
TARGET = CHARANUM-1
IF TFLAG:213
	SIF ARG < 3000 || ARG >= 4000
		ITEM:ARG = 1
ELSE
	;汎用キャラの場合はランダム素質付加処理に飛ぶ
	IF ARG >= 3000 && ARG < 4000
		CALL CHARA_RANDOM_STATE
	ELSE
		;名無しキャラ以外はキャラカードを取得
		ITEM:ARG = 1
	ENDIF
ENDIF
;キャラID設定
CFLAG:3109 = FLAG:998
FLAG:998 += 1
IF !(TFLAG:213)
;理性ゲージ設定
SIF MAXBASE:9 <= 0
	MAXBASE:9 = 9500 + 25 * RAND:101
BASE:理性 = MAXBASE:9
TALENT:理性 = 1
;発情設定
SIF TALENT:動物耳 || TALENT:淫魔 || TALENT:悪魔 || TALENT:妖狐 || TALENT:半白澤 || TALENT:鬼 || TALENT:鵺 || TALENT:化け狸 || TALENT:人狼
	TALENT:発情可 = 1
;調教度ゲージ設定
CALL CHECK_ACCEPTANCE,TARGET
;射精ゲージ設定
SIF (TALENT:オトコ || TALENT:ふたなり) && MAXBASE:2 <= 0
	MAXBASE:2 = CALC_GAUGE2_COMMON(TARGET)
;噴乳ゲージ設定
SIF TALENT:母乳体質
	CALL CALC_GAUGE3_SLAVE, TARGET, 1
;尿意ゲージ設定
SIF TALENT:おもらし癖 || EXP:放尿経験
	CALL CALC_GAUGE4_SLAVE, TARGET, 1
;触手ゲージ設定
SIF TALENT:寄生
	CALL CALC_TENTACLE_GAUGE
;酔いゲージ設定
CALL CALC_GAUGE8, TARGET, 0
ENDIF
;外見設定
CALL SELECT_HAIR_DISPLAY, TARGET
;初期月経周期を設定
SIF !(TFLAG:213)
	CALL EVENT_ADD_CHARA_MENSTRUATION, TARGET
;使用する口上の選択
CALL SELECT_TEXT_DISPLAY, TARGET

;=============================================================================
;外見選択の処理
;=============================================================================
@SELECT_HAIR_DISPLAY, ARG
SIF CFLAG:ARG:3664 == 1
	RETURN 0
LOCAL = 0

; 外見定義のデフォルト指定
CALL RESET_HAIR_CFLAG, ARG

IF (FLAG:12 & 262144)
	;全自動(定義有りは固定)
	PRINTL 自動定義がONなのでランダムで設定します
	CALL SET_CHARA_OTHER_RANDOM, ARG, 1, (HAIR_CHECK_1(ARG,1) != "ない"), (HAIR_CHECK(ARG,1) != "ない")
ELSE
	SIF CFLAG:ARG:元の瞳色 < 2100
		CFLAG:ARG:元の瞳色 = 2100
	SIF CFLAG:ARG:元の服色 < 2150
		CFLAG:ARG:元の服色 = 2150
	PRINTFORM 現在、%CALLNAME:ARG%の髪型は【%HAIR_CHECK_1(ARG,1)%】、
	PRINTFORM 髪色は【%HAIR_CHECK(ARG,1)%】
	LOCALS = %PARSE_IMAGE_NO(ARG)%
	IF LOCALS == ""
		PRINTFORM 、瞳色は【%GET_EYE_COLOR_STR(ARG)%】、
		PRINTFORM 服色は【%GET_CLOTH_COLOR_STR(ARG)%】です
	ELSE
		PRINT です
	ENDIF
	PRINTL 
	PRINTL 外見を変更しますか？
	PRINTL [0]このまま
	PRINTL [1]変更する
	PRINTL [2]ランダムに決定
	CALL INPUTINT,0,1,2
	IF RESULT == 1
		CALL SET_CHARA_OTHER, ARG
	ELSEIF RESULT == 2
		CALL SET_CHARA_OTHER_RANDOM, ARG
	ENDIF
ENDIF

CFLAG:ARG:3664 = 1

;=============================================================================
;使用する口上の選択処理
;=============================================================================
@SELECT_TEXT_DISPLAY, ARG
#LOCALSIZE 1
;口上の存在判定
TRYCCALLFORM TRY_{NO:ARG}
	TRYCCALLFORM KOJO_{NO:ARG}_DISPLAY_SETTINGS
		LOCAL = (RESULT >= 1 && RESULT <= 3) ? RESULT # 0
	CATCH
		LOCAL = 1
	ENDCATCH
CATCH
	LOCAL = 0
ENDCATCH
DRAWLINE
PRINTFORML %CALLNAME:ARG%に使用する口上を選択してください(※後から変更はできません)
DRAWLINE
PRINTLC [0]使用しない
PRINTLC [1]地の文のみ
PRINTLC [2]汎用口上のみ
PRINTLC [3]汎用口上＋地の文
SIF LOCAL == 1 || LOCAL == 2
	PRINTLC [4]専用口上のみ
SIF LOCAL == 1 || LOCAL == 3
	PRINTLC [5]専用口上＋地の文
PRINTL 
$INPUT_LOOP
INPUT
IF RESULT == 0
	PRINTFORMW %CALLNAME:ARG%に口上・地の文は使用しないよう設定しました
	;口上表示の個別設定フラグに記憶
	CFLAG:ARG:9 = 1
ELSEIF RESULT == 1
	PRINTFORMW %CALLNAME:ARG%に地の文を使用するよう設定しました
	;口上表示の個別設定フラグに記憶
	CFLAG:ARG:9 = 2
ELSEIF RESULT == 2
	PRINTFORMW %CALLNAME:ARG%に汎用口上を使用するよう設定しました
	;口上表示の個別設定フラグに記憶
	CFLAG:ARG:9 = 4
	;「人格設定」
	CALL DEFINE_JINKAKU_SELECT, ARG
ELSEIF RESULT == 3
	PRINTFORMW %CALLNAME:ARG%に汎用口上と地の文を使用するよう設定しました
	;口上表示の個別設定フラグに記憶
	CFLAG:ARG:9 = 6
	;「人格設定」
	CALL DEFINE_JINKAKU_SELECT, ARG
ELSEIF RESULT == 4 && (LOCAL == 1 || LOCAL == 2)
	PRINTFORMW %CALLNAME:ARG%に専用口上を使用するよう設定しました
	;口上表示の個別設定フラグに記憶
	CFLAG:ARG:9 = 8
ELSEIF RESULT == 5 && (LOCAL == 1 || LOCAL == 3)
	PRINTFORMW %CALLNAME:ARG%に専用口上と地の文を使用するよう設定しました
	;口上表示の個別設定フラグに記憶
	CFLAG:ARG:9 = 10
ELSE
	CLEARLINE 1
	REUSELASTLINE
	GOTO INPUT_LOOP
ENDIF

;=============================================================================
;テーブル計算汎用処理
;=============================================================================
;-------------------------------------------------
;テーブル計算その１
;-------------------------------------------------
;テーブル計算用
;ARG:0 = 代入すべき変数(以下元変数)より引き渡された数
;ARG:1 ・ ARG:2 = 元変数がARG:2より大きいならばARG:1を引いてARG:2を割る
@TABLE_CALC(ARG, ARG:1, ARG:2)
#FUNCTION
#LOCALSIZE 1
LOCAL = ARG
SIF LOCAL > ARG:1
	LOCAL = ARG:1 + (LOCAL - ARG:1) / ARG:2

RETURNF LOCAL

;-------------------------------------------------
;テーブル計算その２
;-------------------------------------------------
;テーブル計算用
;ARG:0 = 代入すべき変数(以下元変数)より引き渡された数
;ARG:1 ・ ARG:2 = 元変数がARG:2より大きいならばARG:1を引いそれに、ARG:2の100分の1の値を掛ける
@TABLE_CALC2(ARG, ARG:1, ARG:2)
#FUNCTION
#LOCALSIZE 1
LOCAL = ARG
SIF LOCAL > ARG:1
	LOCAL = ARG:1 + (LOCAL - ARG:1) * ARG:2 / 100

RETURNF LOCAL

;=============================================================================
;各種汎用表示処理
;=============================================================================
;-------------------------------------------------
;萬圓表示
;-------------------------------------------------
@SHOW_YEN(ARG)
#FUNCTIONS
RETURNF @"\@(ARG >= 10000) ? {ARG/10000}萬 # \@\@(ARG%10000 > 0) ? {ARG%10000} # \@圓"

;-------------------------------------------------
;コンマでの桁区切り表示
;高々「京」までしか記録できないからこんな計算は無駄だって？
;ぬかしおる。
;-------------------------------------------------
@THOUSAND_SEPARATOR(ARG)
#FUNCTIONS
#DIM PDIGIT, 4
#DIMS NUMS, 2
PDIGIT:0 = HOW_MANY_DIGITS(ARG)
PDIGIT:1 = POWER(10, PDIGIT:0)
PDIGIT:2 = PDIGIT:0
PDIGIT:3 = ARG
NUMS:0 = 
NUMS:1 = 
$CALC
NUMS:0 = \@(PDIGIT:3 >= PDIGIT:1) ? {PDIGIT:3 / PDIGIT:1} # なし \@
IF PDIGIT:0 % 3 == 0 && PDIGIT:0 > 2 && PDIGIT:3 / PDIGIT:1 > 0
	NUMS:1 = %NUMS:1%%NUMS:0%,
ELSEIF NUMS:0 == "なし" && PDIGIT:0 == PDIGIT:2

ELSEIF PDIGIT:0 % 3 == 0 && PDIGIT:0 > 2
	NUMS:1 = %NUMS:1%0,
ELSEIF NUMS:0 == "なし" && PDIGIT:0 != PDIGIT:2
	NUMS:1 = %NUMS:1%0
ELSE
	NUMS:1 = %NUMS:1%%NUMS:0%
ENDIF
SIF PDIGIT:0 < 1
	RETURNF NUMS:1
PDIGIT:0--
PDIGIT:3 = PDIGIT:3 % PDIGIT:1
PDIGIT:1 = POWER(10, PDIGIT:0)
GOTO CALC

;-------------------------------------------------
;何桁かの計算
;-------------------------------------------------
@HOW_MANY_DIGITS(ARG)
#FUNCTION
RETURNF (ARG / 10 == 0) ? 1 # 1 + HOW_MANY_DIGITS(ARG / 10)

;=============================================================================
;その他の汎用処理
;=============================================================================
;-------------------------------------------------
;期限日セット処理
;-------------------------------------------------
@SET_DEADLINE(ARG)
#FUNCTION
SELECTCASE ARG
	;EASY(1周目のみ期限＋0日)
	CASE 1
		RETURNF 120
	;NORMAL
	CASE 2
		RETURNF 100
	;HARD
	CASE 3
		RETURNF 90
	;LUNATIC(
	CASE 4
		RETURNF 80
	;PHANTASM
	CASE 5
		RETURNF 70
	;ULTRA
	CASE 6
		RETURNF 50
	;OVERDRIVE
	CASE 7
		RETURNF 40
	;UNKOWN
	CASEELSE
		RETURNF 100
ENDSELECT

;-------------------------------------------------
;難易度表示処理
;-------------------------------------------------
@DISPLAY_DIFFICULTY(ARG)
#FUNCTIONS
SELECTCASE ARG
	;EASY
	CASE 1
		RETURNF "EASY"
	;NORMAL
	CASE 2
		RETURNF "NORMAL"
	;HARD
	CASE 3
		RETURNF "HARD"
	;LUNATIC
	CASE 4
		RETURNF "LUNATIC"
	;PHANTASM
	CASE 5
		RETURNF "PHANTASM"
	;ULTRA
	CASE 6
		RETURNF "ULTRA"
	;OVERDRIVE
	CASE 7
		RETURNF "OVERDRIVE"
	;UNKOWN
	CASEELSE
		RETURNF "UNKOWN"
ENDSELECT

;-------------------------------------------------
;セーブする際の不要な変数リセット処理
;-------------------------------------------------
@RESET_VAR_SAVE
;………………………………………………
;システムで使用する不要変数リセット
;………………………………………………
;一文字変数リセット
VARSET A, 0
VARSET B, 0
VARSET C, 0
VARSET D, 0
VARSET E, 0
VARSET F, 0
VARSET G, 0
VARSET H, 0
VARSET I, 0
VARSET J, 0
VARSET K, 0
VARSET L, 0
VARSET M, 0
VARSET N, 0
VARSET O, 0
VARSET P, 0
VARSET Q, 0
VARSET R, 0
VARSET S, 0
VARSET T, 0
VARSET U, 0
VARSET V, 0
VARSET W, 0
VARSET X, 0
VARSET Y, 0
VARSET Z, 0
;ステータス変動数値リセット
VARSET UP:0, 0
VARSET DOWN:0, 0

;………………………………………………
;各キャラの不要変数リセット
;………………………………………………
REPEAT CHARANUM
	;入手する珠の変数をリセット
	VARSET GOTJUEL:COUNT:0, 0
	;パラメータをリセット
	VARSET PALAM:COUNT:快Ｃ, 0
	;ステータス変動数値リセット
	VARSET DOWNBASE:COUNT:0, 0
	VARSET SOURCE:COUNT:快Ｃ, 0
	VARSET TCVAR:COUNT:Ｖ経験, 0, 0, 100
	;絶頂のリセット
	VARSET EX:COUNT:0, 0
	VARSET NOWEX:COUNT:0, 0
	;一時的装着道具のリセット
	VARSET TEQUIP:COUNT:0, 0
	;汚れのリセット
	RESET_STAIN COUNT
REND

;-------------------------------------------------
;消耗品の消費と補充汎用処理
;-------------------------------------------------
;ARG＝アイテム番号, ARG:1＝消費するアイテムの個数(1未満の時は1に修正)
@USE_PLURAL_ITEM, ARG, ARG:1
#LOCALSIZE 1
;アイテム番号が消耗品の場合
IF (ARG >= 60 && ARG < 90) || (ARG >= 600 && ARG < 620)
	;未実装アイテムの場合も処理を行わない
	SIF STRLENS(ITEMNAME:ARG) <= 0
		RETURN 0
;アイテム番号が不正の時は処理を行わない
ELSE
	RETURN 0
ENDIF
;最低限1個は消費
ARG:1 = MAX(ARG:1, 1)
;アイテム減少(0未満にはならないようにする)
ITEM:ARG = MAX(ITEM:ARG - ARG:1, 0)

;一般的な薬品アイテム
IF GROUPMATCH(ARG, 60, 61, 62, 63, 64, 65)
	LOCAL = 4
;特殊な薬品アイテムの自動補充
ELSEIF GROUPMATCH(ARG, 66, 67, 68, 69, 70)
	LOCAL = 8
;消耗品アイテム
ELSE
	LOCAL = 16
ENDIF
;コンフィグで設定していた場合は補充
SIF FLAG:13 & LOCAL && MONEY:0 >= (ITEMPRICE:ARG * ARG:1)
	CALL FILL_PLURAL_ITEM, ARG, ARG:1

;-------------------------------------------------
;ビット数計算汎用関数
;-------------------------------------------------
@COUNTBIT(ARG, ARG:1, ARG:2)
#FUNCTION
#LOCALSIZE 2
LOCAL:1 = 0
FOR LOCAL, ARG:1, (ARG:2 + 1)
	LOCAL:1 += GETBIT(ARG, LOCAL)
NEXT
RETURNF LIMIT(LOCAL:1, 0, 63)

;-------------------------------------------------
;期限、目標金額が存在するゲームモードであるか
;-------------------------------------------------
;1を返した場合は期限、目標金額が存在するゲームモードである
@CHECK_GAMEMODE_ENDING_EXIST
#FUNCTION
RETURNF (FLAG:4 == 0 || FLAG:4 == 1 || FLAG:4 == 4) ? 1 # 0

;………………………………………………
;調教度リセット
;………………………………………………
@CHECK_ACCEPTANCE, ARG
CFLAG:ARG:3668 = -150
;従順
CFLAG:ARG:3668 += 60 * ABL:ARG:従順
;同性のチェック
IF !TALENT:ARG:オトコ && !TALENT:MASTER:オトコ
	;レズっ気
	CFLAG:ARG:3668 += 30 * ABL:ARG:レズっ気
	;レズ中毒
	CFLAG:ARG:3668 += 35 * ABL:ARG:レズ中毒
ENDIF
IF TALENT:ARG:オトコ && TALENT:MASTER:オトコ
	;ＢＬっ気
	CFLAG:ARG:3668 += 30 * ABL:ARG:ＢＬっ気
	;ＢＬ中毒
	CFLAG:ARG:3668 += 35 * ABL:ARG:ＢＬ中毒
ENDIF
;反抗的
SIF TALENT:ARG:反抗的
	CFLAG:ARG:3668 -= 100
;素直
SIF TALENT:ARG:素直
	CFLAG:ARG:3668 += 75
;自制心
SIF TALENT:ARG:自制心
	CFLAG:ARG:3668 -= 75
;感情乏しい
SIF TALENT:ARG:感情乏しい
	CFLAG:ARG:3668 -= 75
;解放
SIF TALENT:ARG:解放
	CFLAG:ARG:3668 += 100
;抵抗
SIF TALENT:ARG:抵抗
	CFLAG:ARG:3668 -= 100
;快感に素直
IF TALENT:ARG:快感に素直
	CFLAG:ARG:3668 += 100
;快感の否定
ELSEIF TALENT:ARG:快感の否定
	CFLAG:ARG:3668 -= 100
ENDIF
;男嫌い
IF TALENT:ARG:男嫌い && TALENT:MASTER:オトコ
	CFLAG:ARG:3668 -= 100
;女嫌い
ELSEIF TALENT:ARG:女嫌い && !TALENT:MASTER:オトコ
	CFLAG:ARG:3668 -= 100
ENDIF
;服従
SIF TALENT:ARG:服従
	CFLAG:ARG:3668 += 200
;傷物
SIF TALENT:ARG:傷物
	CFLAG:ARG:3668 -= 150
;壊造人格
SIF TALENT:ARG:壊造人格
	CFLAG:ARG:3668 += 400
;淫乱
SIF TALENT:ARG:淫乱
	CFLAG:ARG:3668 += 200
;即落ち
SIF TALENT:ARG:即落ち
	CFLAG:ARG:3668 += 200
;淫魔
SIF TALENT:ARG:淫魔
	CFLAG:ARG:3668 += 400
	
;神霊の場合、主人が[謎の魅力]を持っていないとなびきにくい
SIF TALENT:ARG:神霊 && TALENT:MASTER:謎の魅力 == 0
	CFLAG:ARG:3668 -= 75
;半神の場合も主人が[謎の魅力]または[魅惑]を持っていないとなびきにくい
SIF TALENT:ARG:半神 && TALENT:MASTER:魅惑 == 0 && TALENT:MASTER:謎の魅力 == 0
	CFLAG:ARG:3668 -= 75
;死神の場合、主人が[仙人]ならばなびきにくい
SIF TALENT:ARG:死神 && TALENT:MASTER:仙人
	CFLAG:ARG:3668 -= 75
;仙人の場合、主人が[死神]ならばなびきにくい
SIF TALENT:ARG:仙人 && TALENT:MASTER:死神
	CFLAG:ARG:3668 -= 75

;主人の魅惑
SIF TALENT:MASTER:魅惑
	CFLAG:ARG:3668 += 75
;主人の謎の魅力
SIF TALENT:MASTER:謎の魅力
	CFLAG:ARG:3668 += 75
;主人の人気
SIF TALENT:MASTER:人気
	CFLAG:ARG:3668 += 75

CFLAG:ARG:3668 = LIMIT(CFLAG:ARG:3668, -1000, 1000)